---
title: "Diagnostics graphiques"
eval: true
echo: false
cache: false
out-width: "100%"
fig-width: 6.6
fig-height: 10
fig-align: "center"
---



On considère une régression linéaire avec deux variables explicatives, âge (en années) et une variable catégorielle pour le niveau d'éducation, sans interaction entre les deux. Sur la base des diagnostics graphiques, quel postulat du modèle linéaire n'est pas respecté? 



Les diagnostics graphiques pour la régression linéaire sont: résidus ordinaires versus valeurs ajustées (en haut à gauche), résidus ordinaires versus variable explicative âge (en haut à droite), valeur absolue des résidus studentisés externes contre valeurs ajustées (milieu, à gauche), résidus studentisés externes contre niveau d'éducation (milieu, à droite), diagramme quantile-quantile des résidus studentisés externes (en bas à gauche) et distance de Cook en fonction de l'indice (en bas à droite).


*Attention: certaines violations des postulats ont un effet domino.*

**Postulats du modèle**

* spécification incorrecte de la moyenne
* additivité
* homoscédasticité
* normalité
* absence de valeurs aberrantes


```{r}
#| message: false
#| warning: false
# Diagnostic plots: acf/ e_{t} versus e_{t-1}
# fitted versus predictor
# fitted versus residuals
# fitted versus esr
# Q-Q plot of esr
# boxplots per category

# (1) Plot shows omitted interaction
# (2) quadratic pattern
# (3) funnel (increase in variance)
# (4) Group heteroscedasticity
# (5) heavy non-normality + small sample size in categ
# (6) Outliers
set.seed(1234)
educ <- factor(sample.int(n = 3, size = 100, replace = TRUE))
age <- 1 + round(runif(100, min = 18, max = 75))
model_gen <- function(scenario){
stopifnot(scenario %in% 1:6)
if(scenario == 1L){
  y <- as.numeric(runif(1, 3,4)*I(educ == 2)*scale(age) - 
                  runif(1, 2,3)*I(educ == 1)*scale(age) + 
                  rnorm(n = 100))
  mod <- lm(y~age + educ)
  # plot(resid(mod)~fitted(mod), col = as.numeric(educ))
} else if(scenario == 2L){
   y <- switch(sample.int(2,1),
               as.numeric(runif(1, 3,4)*scale(age) - 
                  runif(1, -2,-1)*I((scale(age)-1)^2)  + 
                  rnorm(n = 100)),
               as.numeric(runif(1, 3,4)*scale(age) - 
                  runif(1, -4,-2)*scale(exp(scale(age)))  + 
                  rnorm(n = 100)),
               
   )
  mod <- lm(y~age)
  # plot(resid(mod)~fitted(mod), col = as.numeric(educ))
} else if(scenario == 3L){
  y <- runif(1,1,2)*age + rnorm(100)*2*(age - min(age))
  # plot(rstudent(lm(y~age))~fitted(lm(y~age)))
} else if(scenario == 4L){
  ord <- sample.int(3,3)
  y <- runif(1,1,2)*age + 
    rnorm(100, sd = 0.1*ord[1])*I(educ ==1) + 
    rnorm(100, sd = ord[2])*I(educ ==2) +
    rnorm(100, sd = ord[3])*I(educ ==3)
  #boxplot(rstudent(lm(y~age + educ))~educ)
} else if(scenario == 5L){
  scenn <- sample.int(2,1)
  y <- switch(scenn,
              #switch(sample.int(2,1),-1,1)*100*rgamma(n = 100, shape = 1, scale = 2),
              switch(sample.int(2,1),0,3)- rbinom(100, size = 2, prob = 0.3),
              ifelse(runif(100)< 0.25, rnorm(100, mean = 4), 
                     rnorm(100, mean = -4)))
  # qqnorm(scale(rstudent(lm(y~age))));abline(a=0,b=1)
} else if(scenario == 6L){
  nout <- sample.int(5,1)
  y <- runif(1,1,2)*2*scale(age) + c(rnorm(100-nout), switch(sample.int(2,1),-1,1)*runif(nout,min = 5, max = 10))[order(age)]
}
linmod <- lm(y~ age + educ)
cols <- viridis::viridis(3)
library(ggplot2)
library(patchwork)
library(ggfortify)
# library(qqplotr, warn.conflicts = FALSE)
model <- data.frame(y = y, 
                    age = age, 
                    educ = factor(educ), 
                    e = resid(linmod), 
                    r = rstudent(linmod),
                    yhat = fitted(linmod), 
                    cook = cooks.distance(linmod),
                    leverage = hatvalues(linmod))
g1 <- ggplot(data = model,
  mapping = aes(x = yhat, y = e, col = educ)) +
    geom_point() + 
  scale_color_viridis_d() +
  labs(x = "valeurs ajustées", 
     ylab = "résidus ordinaires")
g2 <- ggplot(data = model,
  mapping = aes(x = age, y = e, col = educ)) +
    geom_point() + 
  scale_color_viridis_d() +
  labs(x = "âge", 
     ylab = "résidus ordinaires")
g3 <- ggplot(data = model,
  mapping = aes(x = yhat, y = abs(r))) +
    geom_point() + 
  labs(x = "valeurs ajustées", 
     ylab = "|résidus studentisés externes|")
g4 <- ggplot(data = model,
  mapping = aes(x = educ, col = educ, y = r)) +
  geom_boxplot() + 
  geom_jitter() + 
  scale_color_viridis_d() +
  labs(x = "niveau d'éducation", 
     ylab = "|résidus studentisés externes|")
g5 <- ggplot(data = model, mapping = aes(sample = r)) +
 qqplotr::stat_qq_band(distribution = "t", detrend = FALSE, bandType = "boot", B = 9999, dparams = list(df = df.residual(linmod)-1)) +
 qqplotr::stat_qq_line(distribution = "t", detrend = FALSE, dparams = list(df = df.residual(linmod)-1)) +
 qqplotr::stat_qq_point(distribution = "t", detrend = FALSE, dparams = list(df = df.residual(linmod)-1)) +
 labs(x = "quantiles théoriques Student",
      y = "résidus studentisés externes")
# g6 <- autoplot(linmod, which = 6,) + labs(x = "levier/(1-levier)", y = "distance de Cook", title =  "")
# class(g6) <- c("gg","ggplot")
g6 <- ggplot(data = model, mapping = aes(y = cook, x = leverage/(1-leverage))) +
  geom_point() +
  geom_abline(intercept = rep(0,5), slope = c(1,2,3,4,5)) +
  scale_x_continuous(limits = c(0,NA)) +
  labs(x = "levier / (1-levier)", y = "distance de Cook")
  plot <- 
(g1 + g2) / (g3 + g4) / (g5 + g6) + plot_layout(guides = "collect") & theme_classic() & theme(legend.position = "bottom")
return(plot)
}
```

## Exemple 1

```{r}
#| eval: true
#| echo: false
print(model_gen(3))
```

## Exemple 2

```{r}
#| eval: true
#| echo: false
print(model_gen(2))
```

## Exemple 3

```{r}
#| eval: true
#| echo: false
print(model_gen(5))
```

## Exemple 4

```{r}
#| eval: true
#| echo: false
print(model_gen(1))
```

## Exemple 5

```{r}
#| eval: true
#| echo: false
print(model_gen(4))
```

## Exemple 6

```{r}
#| eval: true
#| echo: false
print(model_gen(6))
```


